# ComposerAgent spec: defines request/response models for the agent
from pydantic import BaseModel, Field, HttpUrl
from typing import List, Optional, Dict, Any
from ..documents.brand_document_spec import BrandDocument
from ..documents.post_plan_document_spec import PostPlanDocument
from ..documents.post_document_spec import PostDocument, PostContent, PostMediaItem
from ..common.response_base import ResponseBase

class ComposerAgentRequest(BaseModel):
	brand_document: BrandDocument = Field(..., description="The brand document for which to compose content")
	post_plan_document: PostPlanDocument = Field(..., description="The post plan document guiding content creation")
	post_content: PostContent = Field(..., description="Structured post content generated by the CopywriterAgent")
	run_trace_id: Optional[str] = Field(None, description="Trace/session identifier for logging and tracing")

class ComposerAgentResponse(ResponseBase):
	composed_post: PostDocument = Field(..., description="The final composed post document, including all content and media references")
	metadata: Optional[Dict[str, Any]] = Field(None, description="Additional metadata about the composed post")
