---
id: 16629962-bb60-4718-ad83-7da6c0705c9e
---

sequenceDiagram
	participant Client as Client (Postman)
	participant Orchestrator as Orchestrator (orchestrate_content)
	participant GetBrandTool as GetBrandTool
	participant GetPostPlanTool as GetPostPlanTool
	participant GetPostsTool as GetPostsTool
	participant CopywriterAgent as CopywriterAgent
	participant ComposerAgent as ComposerAgent
	participant SearchOnlineMediaTool as SearchOnlineMediaTool
	participant SearchDatabaseMediaTool as SearchDatabaseMediaTool
	participant ComposeImage as ComposeImage
	participant BlobStorage as BlobStorage
	participant SocialMediaPublishTool as SocialMediaPublishTool
	participant CosmosDB as CosmosDB
	participant TraceLogger as TraceLogger


	Client->>Orchestrator: OrchestrateContentRequest
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Received OrchestrateContentRequest")
	Orchestrator->>GetBrandTool: GetBrandRequest
	GetBrandTool->>CosmosDB: GetBrandRequest
	CosmosDB-->>GetBrandTool: GetBrandResponse (brandDocument)
	GetBrandTool-->>Orchestrator: GetBrandResponse (brandDocument)
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Fetched brandDocument")
	Orchestrator->>GetPostPlanTool: GetPostPlanRequest
	GetPostPlanTool->>CosmosDB: GetPostPlanRequest
	CosmosDB-->>GetPostPlanTool: GetPostPlanResponse (postPlanDocument)
	GetPostPlanTool-->>Orchestrator: GetPostPlanResponse (postPlanDocument)
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Fetched postPlanDocument")
	Orchestrator->>CosmosDB: UpdatePostRequest (status="retrieved brand & plan")
	CosmosDB-->>Orchestrator: UpdatePostResponse
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Updated post: retrieved brand & plan")
	Orchestrator->>CopywriterAgent: CopywriterAgentRequest
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Sent CopywriterAgentRequest")
	CopywriterAgent->>GetPostsTool: GetPostsRequest (brandId)
	GetPostsTool->>CosmosDB: GetPostsRequest
	CosmosDB-->>GetPostsTool: GetPostsResponse
	GetPostsTool-->>CopywriterAgent: GetPostsResponse
	CopywriterAgent-->>Orchestrator: CopywriterAgentResponse
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Received CopywriterAgentResponse")
	Orchestrator->>CosmosDB: UpdatePostRequest (status="copywriter complete")
	CosmosDB-->>Orchestrator: UpdatePostResponse
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Updated post: copywriter complete")
	Orchestrator->>ComposerAgent: ComposerAgentRequest
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Sent ComposerAgentRequest")
	ComposerAgent->>SearchOnlineMediaTool: SearchOnlineMediaRequest
	SearchOnlineMediaTool-->>ComposerAgent: SearchOnlineMediaResponse
	ComposerAgent->>TraceLogger: LogEvent(runTraceId, "Searched online media")
	ComposerAgent->>SearchDatabaseMediaTool: SearchDatabaseMediaRequest
	SearchDatabaseMediaTool-->>ComposerAgent: SearchDatabaseMediaResponse
	ComposerAgent->>TraceLogger: LogEvent(runTraceId, "Searched database media")
	ComposerAgent->>ComposeImage: ComposeImageRequest
	ComposeImage-->>ComposerAgent: ComposeImageResponse (imageData)
	ComposerAgent->>TraceLogger: LogEvent(runTraceId, "Composed image")
	ComposerAgent->>BlobStorage: UploadImageRequest (imageData)
	BlobStorage-->>ComposerAgent: UploadImageResponse (imageUrl)
	ComposerAgent->>TraceLogger: LogEvent(runTraceId, "Uploaded image to BlobStorage")
	ComposerAgent-->>Orchestrator: ComposerAgentResponse
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Received ComposerAgentResponse")
	Orchestrator->>CosmosDB: UpdatePostRequest (status="composer complete")
	CosmosDB-->>Orchestrator: UpdatePostResponse
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Updated post: composer complete")
	Orchestrator->>SocialMediaPublishTool: PublishPostRequest (postData)
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Sent PublishPostRequest")
	SocialMediaPublishTool-->>Orchestrator: PublishPostResponse (success)
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Received PublishPostResponse")
	Orchestrator->>CosmosDB: UpdatePostRequest (status="published")
	CosmosDB-->>Orchestrator: UpdatePostResponse
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Updated post: published")
	Orchestrator-->>Client: OrchestrateContentResponse
	Orchestrator->>TraceLogger: LogEvent(runTraceId, "Sent OrchestrateContentResponse")